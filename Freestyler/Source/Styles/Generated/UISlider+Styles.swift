// This is code generated by style_generator.rb script. Do not modify this file directly since every changes will be overwritten by script.
// Date: 2016-12-26 14:56:34 +0300



#if os(iOS)
import UIKit
import FreestylerCore



public extension UISlider {
    /** Updates `minimumValueImage` property of `UISlider` instance. */
    public static func style(minimumValueImage: UIImage?) -> Style {
        return Style("Minimum Value Image \(minimumValueImage)") {
            (styleable: UISlider) in
            styleable.minimumValueImage = minimumValueImage
        }
    }

    /** Updates `maximumValueImage` property of `UISlider` instance. */
    public static func style(maximumValueImage: UIImage?) -> Style {
        return Style("Maximum Value Image \(maximumValueImage)") {
            (styleable: UISlider) in
            styleable.maximumValueImage = maximumValueImage
        }
    }

    /** Updates `minimumTrackTintColor` property of `UISlider` instance. */
    public static func style(minimumTrackTintColor: Color?) -> Style {
        return Style("Minimum Track Tint Color \(minimumTrackTintColor)") {
            (styleable: UISlider) in
            styleable.minimumTrackTintColor = minimumTrackTintColor?.color
        }
    }

    /** Updates `maximumTrackTintColor` property of `UISlider` instance. */
    public static func style(maximumTrackTintColor: Color?) -> Style {
        return Style("Maximum Track Tint Color \(maximumTrackTintColor)") {
            (styleable: UISlider) in
            styleable.maximumTrackTintColor = maximumTrackTintColor?.color
        }
    }

    /** Updates `thumbTintColor` property of `UISlider` instance. */
    public static func style(thumbTintColor: Color?) -> Style {
        return Style("Thumb Tint Color \(thumbTintColor)") {
            (styleable: UISlider) in
            styleable.thumbTintColor = thumbTintColor?.color
        }
    }
}
#endif
