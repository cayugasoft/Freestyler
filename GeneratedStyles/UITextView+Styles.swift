// This is code generated by style_generator.rb script. Do not modify this file directly since every changes will be overwritten by script.
// Date: 2016-09-24 00:35:39 +0300
import UIKit
import FreestylerCore



public extension UITextView {
    /** Updates `font` property of `UITextView` instance. */
    public static func font(font: FontType?) -> Style {
        return Style("Font \(font)") {
            (styleable: UITextView) in
            styleable.font = font?.font
        }
    }

    /** Updates `textColor` property of `UITextView` instance. */
    public static func textColor(textColor: ColorType?) -> Style {
        return Style("Text Color \(textColor)") {
            (styleable: UITextView) in
            styleable.textColor = textColor?.color
        }
    }

    /** Updates `editable` property of `UITextView` instance. */
    public static func editable(editable: Bool) -> Style {
        return Style("Editable \(editable)") {
            (styleable: UITextView) in
            styleable.editable = editable
        }
    }

    /** Updates `allowsEditingTextAttributes` property of `UITextView` instance. */
    public static func allowsEditingTextAttributes(allowsEditingTextAttributes: Bool) -> Style {
        return Style("Allows Editing Text Attributes \(allowsEditingTextAttributes)") {
            (styleable: UITextView) in
            styleable.allowsEditingTextAttributes = allowsEditingTextAttributes
        }
    }

    /** Updates `textAlignment` property of `UITextView` instance. */
    public static func textAlignment(textAlignment: NSTextAlignment) -> Style {
        return Style("Text Alignment \(textAlignment)") {
            (styleable: UITextView) in
            styleable.textAlignment = textAlignment
        }
    }

    /** Updates `typingAttributes` property of `UITextView` instance. */
    public static func typingAttributes(typingAttributes: [String : AnyObject]) -> Style {
        return Style("Typing Attributes \(typingAttributes)") {
            (styleable: UITextView) in
            styleable.typingAttributes = typingAttributes
        }
    }

    /** Updates `linkTextAttributes` property of `UITextView` instance. */
    public static func linkTextAttributes(linkTextAttributes: [String : AnyObject]?) -> Style {
        return Style("Link Text Attributes \(linkTextAttributes)") {
            (styleable: UITextView) in
            styleable.linkTextAttributes = linkTextAttributes
        }
    }

    /** Updates `textContainerInset` property of `UITextView` instance. */
    public static func textContainerInset(textContainerInset: UIEdgeInsets) -> Style {
        return Style("Text Container Inset \(textContainerInset)") {
            (styleable: UITextView) in
            styleable.textContainerInset = textContainerInset
        }
    }
}
